package ru.komiss77.listener;

import java.time.Duration;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import com.destroystokyo.paper.ClientOption;
import io.papermc.paper.event.player.AsyncChatEvent;
import net.kyori.adventure.audience.Audience;
import net.kyori.adventure.inventory.Book;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.TextComponent;
import net.kyori.adventure.text.event.ClickCallback;
import net.kyori.adventure.text.event.ClickEvent;
import net.kyori.adventure.text.event.HoverEvent;
import net.kyori.adventure.text.format.NamedTextColor;
import net.kyori.adventure.text.format.Style;
import net.kyori.adventure.text.format.TextColor;
import net.kyori.adventure.text.format.TextDecoration;
import net.kyori.adventure.text.serializer.gson.GsonComponentSerializer;
import org.bukkit.Bukkit;
import org.bukkit.GameMode;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import ru.komiss77.ApiOstrov;
import ru.komiss77.LocalDB;
import ru.komiss77.Ostrov;
import ru.komiss77.Timer;
import ru.komiss77.enums.Chanell;
import ru.komiss77.enums.Data;
import ru.komiss77.enums.ServerType;
import ru.komiss77.enums.Stat;
import ru.komiss77.events.ChatPrepareEvent;
import ru.komiss77.modules.games.GM;
import ru.komiss77.modules.netty.OsQuery;
import ru.komiss77.modules.netty.QueryCode;
import ru.komiss77.modules.player.Oplayer;
import ru.komiss77.modules.player.PM;
import ru.komiss77.modules.player.Perm;
import ru.komiss77.modules.translate.Lang;
import ru.komiss77.utils.*;
import ru.komiss77.utils.inventory.InputButton;


//https://docs.advntr.dev/serializer/gson.html

//SpigotChanellMsg.sendChat(ce.getPlayer(), gsonMsg); - –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä—É—Å—Å–∫ –∏ –∞–Ω–≥–ª —Å–æ–æ–±—â
//–Ω–µ –ø–æ–∫–∞–∑ —á–∞—Ç –Ω–∞ –∞–Ω–≥–ª!

public class ChatLst implements Listener {

    private static final boolean TRANSLATE_CHAT = false;

    public static final String NIK_COLOR;
    private static final TextColor MSG_COLOR;
    private static final HoverEvent<Component> SUGGEST_MUTE_TOOLTIP_RU;
    //private static final TextComponent SUGGEST_BLACKLIST_TOOLTIP_RU;
    private static final HoverEvent<Component> PREFIX_TOOLTIP_RU;
    private static final HoverEvent<Component> SUFFIX_TOOLTIP_RU;
    private static final HoverEvent<Component> SUGGEST_MUTE_TOOLTIP_EN;
    //private static final TextComponent SUGGEST_BLACKLIST_TOOLTIP_EN;
    private static final HoverEvent<Component> PREFIX_TOOLTIP_EN;
    private static final HoverEvent<Component> SUFFIX_TOOLTIP_EN;
    private static final ClickEvent DONATE_CLICK_URL;
    private static final HoverEvent<Component> MSG_TOOLTIP_RU;
    private static final HoverEvent<Component> MSG_TOOLTIP_EN;
    private static final HoverEvent<Component> URL_TOOLTIP_RU;
    private static final HoverEvent<Component> URL_TOOLTIP_EN;
    private static final Format[] FORMATS;
    private static final StringUtil.Split SPLIT;
    private static final ClickCallback.Options OPTIONS;
    private static final String ARROW = "‚û†";

    static {
        SPLIT = StringUtil.Split.MEDIUM;
        NIK_COLOR = switch (Ostrov.calendar.get(Calendar.MONTH)) {
            case 11, 0, 1 -> "<gradient:sky:blue>";
            case 2, 3, 4 -> "<gradient:pink:green>";
            case 8, 9, 10 -> "<gradient:beige:gold>";
            default -> "<gradient:apple:dark_aqua>";
        };
        MSG_COLOR = NamedTextColor.GRAY;
        SUGGEST_MUTE_TOOLTIP_RU = HoverEvent.showText(TCUtil.form("¬ß–∫–ö–ª–∏–∫ - –≤—ã–¥–∞—Ç—å –º–æ–ª—á–∞–Ω–∫—É"));
        //SUGGEST_BLACKLIST_TOOLTIP_RU = TCUtils.format("¬ß–∫–ö–ª–∏–∫ - –∫–∏–Ω—É—Ç—å –≤ –ß–°");
        PREFIX_TOOLTIP_RU = HoverEvent.showText(TCUtil.form("¬ß7[¬ß—è‚ú¶¬ß7]=-  ¬ß–æ–•–æ—á–µ—à—å –ø—Ä–µ—Ñ–∏–∫—Å? –ñ–º–∏!!!  ¬ß7-=[¬ß—è‚ú¶¬ß7]"));
        SUFFIX_TOOLTIP_RU = HoverEvent.showText(TCUtil.form("¬ß7[¬ß—è‚ú¶¬ß7]=-  ¬ß—Å–•–æ—á–µ—à—å —Å—É—Ñ—Ñ–∏–∫—Å? –ñ–º–∏!!!  ¬ß7-=[¬ß—è‚ú¶¬ß7]"));
        MSG_TOOLTIP_RU = HoverEvent.showText(TCUtil.form("<beige>ü¢ñ –ö–ª–∏–∫ ¬ß3- –û–ø—Ü–∏–∏"));
        MSG_TOOLTIP_EN = HoverEvent.showText(TCUtil.form("<beige>ü¢ñ Click ¬ß3- Options"));
        URL_TOOLTIP_RU = HoverEvent.showText(TCUtil.form("¬ß9–ö–ª–∏–∫ - –ø–µ—Ä–µ–π—Ç–∏ –ø–æ <u>—Å—Å—ã–ª–∫–µ"));
        URL_TOOLTIP_EN = HoverEvent.showText(TCUtil.form("¬ß9Click - open <u>URL"));
        SUGGEST_MUTE_TOOLTIP_EN = HoverEvent.showText(TCUtil.form("¬ß–∫Click - mute player"));
        //SUGGEST_BLACKLIST_TOOLTIP_EN = TCUtils.format("¬ß–∫Click- add to blackList");
        PREFIX_TOOLTIP_EN = HoverEvent.showText(TCUtil.form("¬ß7[¬ß—è‚ú¶¬ß7]=-  ¬ß–æWant a prefix? Click here!!!  ¬ß7-=[¬ß—è‚ú¶¬ß7]"));
        SUFFIX_TOOLTIP_EN = HoverEvent.showText(TCUtil.form("¬ß7[¬ß—è‚ú¶¬ß7]=-  ¬ß—ÅWant a suffix? Click here!!!  ¬ß7-=[¬ß—è‚ú¶¬ß7]"));
        DONATE_CLICK_URL = ClickEvent.openUrl("http://www.ostrov77.ru/donate.html");
        FORMATS = new Format[] {new Format("**", "<b>", "</b>"), new Format("*", "<i>", "</i>"),
            new Format("||", "<obf>", "</obf>"), new Format("|", "<obf>", "</obf>"), new Format("~~", "<st>", "</st>"),
            new Format("~", "<st>", "</st>"), new Format("__", "<u>", "</u>"), new Format("_", "<i>", "</i>")};
        OPTIONS = ClickCallback.Options.builder().uses(ClickCallback.UNLIMITED_USES).lifetime(Duration.ofMinutes(8)).build();
    }

    private static final class Format {
        private static final char[] RGX_CHARS = {'\\', '.', '^', '$', '*', '+', '?', '{', '}', '[', ']', '(', ')', '|'};
        static {
            Arrays.sort(RGX_CHARS);}
        private final int bgnLen, endLen;
        private final Pattern pat;
        private final String bgnTo;
        private final String endTo;

        private Format(final String bgnOf, final String endOf, final String bgnTo, final String endTo) {
            this.bgnLen = bgnOf.length(); this.endLen = endOf.length(); this.bgnTo = bgnTo; this.endTo = endTo;
            this.pat = Pattern.compile(parse(bgnOf) + "(.*?)" + parse(endOf));
            //\*\*(.*?)\^\^
            //**star face is here to see^^
        }

        private Format(final String bound, final String bgnTo, final String endTo) {
            this.bgnLen = this.endLen = bound.length(); this.bgnTo = bgnTo; this.endTo = endTo;
            this.pat = Pattern.compile(parse(bound) + "(.*?)" + parse(bound));
            //\*\*(.*?)\*\*
            //**star face is here to see**
        }

        private String parse(final String bound) {
            final StringBuilder sb = new StringBuilder(bound.length());
            for (final char c : bound.toCharArray()) {
                if (Arrays.binarySearch(RGX_CHARS, c) >= 0) sb.append("\\");
                sb.append(c);
            }
            return sb.toString();
        }

        private String process(final String msg) {
            final Matcher mt = pat.matcher(msg);
            final StringBuilder sb = new StringBuilder(msg.length());
            int end = 0;
            while (mt.find()) {
                final int stIx = mt.start();
                final String grp = mt.group();
                sb.append(msg, end, stIx).append(bgnTo)
                    .append(grp, bgnLen, grp.length() - endLen).append(endTo);
                end = stIx + grp.length();
            }
            return sb.append(msg.substring(end)).toString();
        }
    }

    // –Ω–∞ HIGHEST –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –º—É—Ç –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–∫—Å–∏.
    // –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ß–° –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ –Ω–∏–∂–µ
    @EventHandler(priority = EventPriority.HIGHEST)
    public void onChat(final AsyncChatEvent e) {
        chat(e.getPlayer(), e.message(), e.viewers());
    }

    public static void chat(final Player sender, final Component msg, final Set<Audience> view) {
        //—Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ –∏–∑ —á–∞—Ç–∞
        final Oplayer senderOp = PM.getOplayer(sender);
        if (senderOp != null && PlayerInput.inputData.containsKey(sender) && PlayerInput.inputData.get(sender).type == InputButton.InputType.CHAT) {
            view.clear();
            //PlayerInput.onInput(sender.getName(), InputButton.InputType.CHAT, TCUtils.toString(e.message()));
            //Could not pass event AsyncChatEvent to Ostrov v2.0 java.lang.IllegalStateException: InventoryOpenEvent may only be triggered synchronously.
            Ostrov.sync(() -> PlayerInput.onInput(sender, InputButton.InputType.CHAT, TCUtil.deform(msg).replace("\\", "")));//—Ü–≤–µ—Ç–∞ –≤–ø–∏—Å–∞–Ω—ã–µ –≤ —á–∞—Ç –Ω–µ —é–∑–∞–ª–∏—Å—å
            return;
        }

        if (senderOp == null) return; //–ø–æ–∫–∞ —Ç–∞–∫, –ø—Ä–æ—Å—Ç–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º - –∏–ª–∏ –±–∞–≥–∞–Ω—ë—Ç –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

        // –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–ª—á–∞–Ω–∫–∏ –Ω–∞ –±–∞–Ω–∂–∏–∫–µ —Ç–æ–∂–µ –Ω–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
        final boolean muted = senderOp.getDataInt(Data.MUTE_TO) > Timer.secTime();
        if (muted) {
            sender.sendMessage(Component.text("–ß–∞—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω - —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –¥—Ä—É–∑—å—è", NamedTextColor.RED)
                .hoverEvent(HoverEvent.showText(TCUtil.form("¬ßc–£ –í–∞—Å –º–æ–ª—á–∞–Ω–∫–∞ –æ—Ç ¬ß6" + senderOp.getDataString(Data.MUTE_BY)
                    + " ¬ßc–∑–∞ ¬ßb" + senderOp.getDataString(Data.MUTE_REAS) + "¬ßc, –æ—Å—Ç–∞–ª–æ—Å—å: ¬ße" +
                    TimeUtil.secondToTime(senderOp.getDataInt(Data.MUTE_TO) - Timer.secTime()))))
                .clickEvent(ClickEvent.openUrl("https://discord.com/channels/646762127335489540/679455910283706388")));
        }
        final boolean banned = senderOp.getDataInt(Data.BAN_TO) > Timer.secTime();
        if (banned) {
            sender.sendMessage(Component.text("–ß–∞—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω —á–∏—Å—Ç–∏–ª–∏—â–µ–º - –≤—ã –∑–∞–±–∞–Ω–µ–Ω—ã", NamedTextColor.RED)
                .hoverEvent(HoverEvent.showText(TCUtil.form("¬ßc–£ –í–∞—Å –±–∞–Ω –æ—Ç ¬ß6" + senderOp.getDataString(Data.BAN_BY)
                    + " ¬ßc–∑–∞ ¬ßb" + senderOp.getDataString(Data.BAN_REAS) + "¬ßc, –æ—Å—Ç–∞–ª–æ—Å—å: ¬ße" +
                    TimeUtil.secondToTime(senderOp.getDataInt(Data.BAN_TO) - Timer.secTime()))))
                .clickEvent(ClickEvent.openUrl("https://discord.com/channels/646762127335489540/679455910283706388")));
            return;
        }

        //–µ—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ª–æ–∫–∞–ª—å–Ω—ã —á–∞—Ç - —Ç–æ—á–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        final String senderName = sender.getName();

        //—Å–æ–∑–¥–∞–¥–∏–º —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π. –£ –∫–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ –ß–°, –±—É–¥—É—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã
        final List<Player> list = new ArrayList<>();

        boolean blacklisted = false;
        final Iterator<Audience> it = view.iterator();
        while (it.hasNext()) {
            if (it.next() instanceof Player playerTo) {
                if (playerTo.getName().equals(senderName)) continue; //—Å–µ–±—è –Ω–µ –Ω–∞–¥–æ –≤ —Å–ø–∏—Å–æ–∫ - –≤ –∫–æ–Ω—Ü–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑—É—Å–ª–æ–≤–Ω–æ
                final Oplayer opTo = PM.getOplayer(playerTo);
                if (opTo == null) {
                    list.add(playerTo);
                    continue;
                }
                if (opTo.isBlackListed(senderName)) {//–ø–∏—à—É—â–∏–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
                    it.remove();
                    blacklisted = true;
                    continue;
                }
                if (muted && !senderOp.friends.contains(opTo.nik)) { //–∑–∞–º—É—á–µ–Ω –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –¥—Ä—É–≥
                    it.remove();
                    continue;
                }
                list.add(playerTo);
            }
        }

        //–∫–∏–Ω—É—Ç—å —ç—Ñ–µ–Ω—Ç - –∏–≥—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—ë –∏–Ω—Ñ–æ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ –ø—Ä–æ–∫—Å–∏, –µ—Å–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ –≤ –ª–æ–±–±–∏ –∏–≥—Ä—ã
        //–∏–≥—Ä–∞ –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å gameInfo –∏ —Ñ–∏–ª—å—Ç—Ä–∞–Ω—É—Ç—å –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –æ—Å—Ç—Ä–æ–≤–Ω–æ–≥–æ –∏–ª–∏ –∫–ª–∞–Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞)
        String strMsg = TCUtil.deform(msg).replace("/<", "<");

        final ChatPrepareEvent ce = new ChatPrepareEvent(sender, senderOp, list, strMsg);
        Bukkit.getPluginManager().callEvent(ce);

        if (ce.isCancelled()) {
            view.clear();
            return;
        }
        if (!ce.sendProxy() && !ce.showLocal()) return; //–∏–≥—Ä–∞ –æ—Ç–º–µ–Ω–∏–ª–∞ –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ - –∑–Ω–∞—á–∏—Ç —Ä–∞—Å—Å—ã–ª–∞–µ—Ç —Å–∞–º–∞

        if (ce.getMessage() != null) {
            strMsg = ce.getMessage();
        }

        if (ce.showLocal()) { //–∏–≥—Ä–∞ –æ—Å—Ç–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–ª—å—à–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ—Ñ—Ñ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —á–∞—Ç
            view.clear();
        }

        //–≤–∫–∏–Ω—É—Ç—å –≤—Å—ë –Ω—É–∂–Ω–æ–µ –≤ —ç–≤–µ–Ω—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
        //–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä–Ω–æ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω—É–∂–Ω–æ—Å—Ç–∏
        //–ª–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ - –≥–æ—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        //–∏–Ω—Ñ–æ –∏–≥—Ä—ã - –≥–æ—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        ce.senderName = senderName;
        ce.banned = false;
        ce.muted = muted;
        ce.prefix = senderOp.getDataString(Data.PREFIX);
        ce.prefix = ce.prefix.isBlank() ? "" : ce.prefix + " <reset>";

        final StringBuilder sb = new StringBuilder();

        if (senderOp.isGuest) {
            if (senderOp.eng) {
                sb.append("¬ß6Player is in ¬ßeGuet Mode¬ß6!")
                    .append("\n¬ß6Player data is not saved!")
                    .append("\n¬ß3Server: ¬ßa").append(Ostrov.MOT_D)
                    .append((muted ? "\n¬ß4–ú–æ–ª—á–∞–Ω–∫–∞: ¬ßcYes" : ""))
                    .append("\n<gray>Click - <gold>direct message");
            } else {
                sb.append("¬ß6–ò–≥—Ä–æ–∫ –≤ ¬ße–ì–æ—Å—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ¬ß6!")
                    .append("\n¬ß6–ò–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è!")
                    .append("\n¬ß3–°–µ—Ä–≤–µ—Ä: ¬ßa").append(Ostrov.MOT_D)
                    .append((muted ? "\n¬ß4–ú–æ–ª—á–∞–Ω–∫–∞: ¬ßc–î–∞" : ""))
                    .append("\n<gray>–ö–ª–∏–∫ - <gold>–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
            }
            ce.suffix = "";
        } else {
            if (senderOp.eng) {
                sb.append("¬ß3Server: ¬ßa").append(Ostrov.MOT_D)
                    .append("\n<amber>Social status: ").append(getStatus(senderOp))
                    .append("\n<stale>Groups: ¬ßf").append(senderOp.chat_group)
                    .append("\n<indigo>Badges: ") //TODO –±–∞–¥–∂–∏–∫–∏
                    .append(PM.getGenderDisplay(senderOp)).append("\n")
                    .append("\n¬ß6Play time: ¬ße").append(TimeUtil.secondToTime(senderOp.getStat(Stat.PLAY_TIME)))
                    .append((muted ? "\n¬ß4Muted: ¬ßcYes" : "\n"))
                    .append("\n<gray>Click - <gold>direct message");
            } else {
                //TODO –±–∞–¥–∂–∏–∫–∏
                sb.append("¬ß3–°–µ—Ä–≤–µ—Ä: ¬ßa").append(Ostrov.MOT_D)
                    .append("\n<amber>–°–æ—Ü. —Å—Ç–∞—Ç—É—Å: ").append(getStatus(senderOp))
                    .append("\n<stale>–ì—Ä—É–ø–ø—ã: ¬ßf").append(senderOp.chat_group)
                    .append("\n<indigo>–ë–∞–¥–∂–∏–∫–∏: ¬ß9").append("\n")
                    .append(PM.getGenderDisplay(senderOp))
                    .append("\n¬ß6–í—Ä–µ–º—è –∏–≥—Ä—ã: ¬ße").append(TimeUtil.secondToTime(senderOp.getStat(Stat.PLAY_TIME)))
                    .append((muted ? "\n¬ß4–ú–æ–ª—á–∞–Ω–∫–∞: ¬ßc–î–∞" : "\n"))
                    .append("\n<gray>–ö–ª–∏–∫ - <gold>–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
            }
            ce.suffix = senderOp.getDataString(Data.SUFFIX);
            ce.suffix = ce.suffix.isBlank() ? "" : "<reset> " + ce.suffix;
        }
        ce.playerTooltip = sb.toString();


        //–≤ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–µ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ –æ–ø–ø–æ–∑–∏—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
        if (TRANSLATE_CHAT) {
            if (!senderOp.eng) {
                ce.strMsgRu = strMsg; //–ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            } else {
                ce.strMsgEn = strMsg; //–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π
            }
            Lang.translateChat(ce);
        } else {
            ce.strMsgRu = strMsg;
            ce.strMsgEn = strMsg;
            process(ce);
        }

        if (blacklisted) {
            ScreenUtil.sendActionBarDirect(sender, "<amber>–ò–≥—Ä–æ–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –≤ –ß–°, –Ω–µ —É–≤–∏–¥—è—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ");
        }
        OsQuery.send(QueryCode.CHAT_STRIP, senderName + LocalDB.WORD_SPLIT + strMsg);
    }

    public static void process(final ChatPrepareEvent ce) {

        final Oplayer sender = ce.getOplayer();
        final boolean useColorCode = Perm.canColorChat(ce.getPlayer(), sender);

        final Component[] splitRU = format(ce, false, useColorCode);
        final Component msgRU = splitRU[splitRU.length - 1]; //—Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Å —Ü–≤–µ—Ç–∞–º–∏
        final Component topRU = splitRU.length == 1 ? Component.empty()
            : splitRU[0].append(Component.newline().style(Style.empty()));
        final Component[] splitEN = format(ce, true, useColorCode);
        final Component msgEN = splitEN[splitEN.length - 1]; //—Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Å —Ü–≤–µ—Ç–∞–º–∏
        final Component topEN = splitEN.length == 1 ? Component.empty()
            : splitEN[0].append(Component.newline().style(Style.empty()));

        //–±–∏–ª–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        final TextComponent.Builder bRU = Component.text();
        final TextComponent.Builder bEN = Component.text();

        //–ø—Ä–µ—Ñ–∏–∫—Å
        if (!ce.prefix.isEmpty()) {
            bRU.append(TCUtil.form(ce.prefix)
                .hoverEvent(PREFIX_TOOLTIP_RU)
                .clickEvent(DONATE_CLICK_URL)
            );
            bEN.append(TCUtil.form(ce.prefix)
                .hoverEvent(PREFIX_TOOLTIP_EN)
                .clickEvent(DONATE_CLICK_URL)
            );
        }

        //–Ω–∏–∫ –∏–≥—Ä–æ–∫–∞
        final String name = sender.isGuest ? sender.getDataString(Data.FAMILY) : ce.senderName;
        bRU.append(TCUtil.form(NIK_COLOR + name)
            .hoverEvent(HoverEvent.showText(TCUtil.form(ce.playerTooltip)))
            .clickEvent(ClickEvent.suggestCommand("/msg " + name + " "))
        );

        bEN.append(TCUtil.form(NIK_COLOR + name)
            .hoverEvent(HoverEvent.showText(TCUtil.form(ce.playerTooltip)))
            .clickEvent(ClickEvent.suggestCommand("/msg " + name + " "))
        );

        //—Å—É—Ñ—Ñ–∏–∫—Å
        if (!ce.suffix.isEmpty()) {
            bRU.append(TCUtil.form(ce.suffix)
                .hoverEvent(SUFFIX_TOOLTIP_RU)
                .clickEvent(DONATE_CLICK_URL)
            );
            bEN.append(TCUtil.form(ce.suffix)
                .hoverEvent(SUFFIX_TOOLTIP_EN)
                .clickEvent(DONATE_CLICK_URL)
            );
        }

        //—Å—Ç—Ä–µ–ª–æ—á–∫–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        bRU.append(Component.text(" " + ARROW + " ", MSG_COLOR))
            .append(msgRU.colorIfAbsent(MSG_COLOR));
        bEN.append(Component.text(" " + ARROW + " ", MSG_COLOR))
            .append(msgEN.colorIfAbsent(MSG_COLOR));

        final ServerType serverType = GM.GAME.type;
        //Ostrov.log_warn("sendProxy?"+ce.sendProxy()+" isLocalChat?"+senderOp.isLocalChat());
        //–∏–≥—Ä–∞ –Ω–µ –æ—Ç–º–µ–Ω–∏–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ –ø—Ä–æ–∫—Å–∏ - —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ –¥–µ—Ñ–æ–ª—Ç—É:
        //–Ω–∞ –≤—Å–µ—Ö –∫—Ä–æ–º–µ –º–∏–Ω–∏–∏–≥—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º,
        //–∞ –Ω–∞ –º–∏–Ω–∏–∏–≥—Ä–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –≤ –º–∏—Ä–µ –ª–æ–±–±–∏
        final Player pl = ce.getPlayer();
        if (!ce.banned && !ce.muted && ce.sendProxy() && !sender.isLocalChat()) {
            final Component proxyResultRU;
            final Component proxyResultEN;
            //—É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –ø—É—Å–∫–∞–π –ì–õ–û–ë–ê–õ–¨–ù–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –≤—Å–µ–≥–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–ó–Ω–∞—á–µ–∫]_<–ü—Ä–µ—Ñ–∏–∫—Å>_–ò–º—è_<–°—É—Ñ—Ñ–∏–∫—Å>_¬ª_(c–æ–æ–±—â–µ–Ω–∏–µ)
            proxyResultRU = topRU.append(GM.getLogo()).append(bRU.build());
            proxyResultEN = topEN.append(GM.getLogo()).append(bEN.build());
            final String gsonMsgRU = GsonComponentSerializer.gson().serialize(proxyResultRU);
            final String gsonMsgEN = GsonComponentSerializer.gson().serialize(proxyResultEN);
            SpigotChanellMsg.sendChat(pl, gsonMsgRU, Chanell.CHAT_RU);
            SpigotChanellMsg.sendChat(pl, gsonMsgEN, Chanell.CHAT_EN);
            OsQuery.send(QueryCode.CHAT_RU, pl.getName() + LocalDB.WORD_SPLIT + gsonMsgRU);
            OsQuery.send(QueryCode.CHAT_EN, pl.getName() + LocalDB.WORD_SPLIT + gsonMsgEN);
        }

        //–µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –æ—Ç–º–µ–Ω–∏–ª–∞ –ø–æ–∫–∞–∑ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ, —Ä–∞—Å—Å—ã–ª–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        //–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
        //–Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –º–∏–Ω–∏–∏–≥—Ä—ã - –≤ –º–∏—Ä–µ lobby –æ–±—ã—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏ —á–∞—Ç, –≤ –ì–ú3 - —á–∞—Ç –∑—Ä–∏—Ç–µ–ª—è, –æ—Å—Ç–∞–ª—å—ã–Ω–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å –ø—Ä–æ—Å—Ç—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
        //–Ω–∞ –±–æ–ª—å—à–∏—Ö c–µ—Ä–≤–µ—Ä–∞—Ö –ø—Ä–æ—Å—Ç–æ–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π

        final Component resultRU;
        final Component viewerResultRU;
        final Component resultEN;
        final Component viewerResultEN;

        if (ce.showLocal()) {
            final Component gi = ce.getViewerGameInfo();
            final Component logo = gi == null ? GM.getLogo() : GM.getLogo().append(gi);
            //–Ω–∞ –º–∏–Ω–∏–∏–≥—Ä–µ –ø–æ–¥–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∑—Ä–∏—Ç–µ–ª—å –∏–ª–∏ –≤ –∏–≥—Ä–µ
            if (serverType == ServerType.ARENAS && !ApiOstrov.isLocalBuilder(pl)) {

                if (pl.getGameMode() == GameMode.SPECTATOR) { //–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ –ì–ú3 - –∑—Ä–∏—Ç–µ–ª—å

                    resultRU = TCUtil.form("¬ß8[–ó—Ä–∏—Ç–µ–ª—å] " + ce.senderName + " ¬ß7" + ARROW + " ")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<gray>–ö–ª–∏–∫ - <gold>–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")))
                        .clickEvent(ClickEvent.suggestCommand("/msg " + ce.senderName + " "))
                        .append(msgRU);

                    resultEN = TCUtil.form("¬ß8[Spectator] " + ce.senderName + " ¬ß7" + ARROW + " ")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<gray>Click - <gold>direct message")))
                        .clickEvent(ClickEvent.suggestCommand("/msg " + ce.senderName + " "))
                        .append(msgEN);

                } else if (!StringUtil.isLobby(pl.getWorld())) { //–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –≤ –º–∏—Ä–µ –ª–æ–±–±–∏ - –∏–≥—Ä–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

                    resultRU = TCUtil.form("¬ß6<¬ße" + ce.senderName + "¬ß6> ¬ß7" + ARROW + " ¬ßf")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<gray>–ö–ª–∏–∫ - <gold>–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")))
                        .clickEvent(ClickEvent.suggestCommand("/msg " + ce.senderName + " "))
                        .append(msgRU);
                    resultEN = TCUtil.form("¬ß6<¬ße" + ce.senderName + "¬ß6> ¬ß7" + ARROW + " ¬ßf")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<gray>Click - <gold>direct message")))
                        .clickEvent(ClickEvent.suggestCommand("/msg " + ce.senderName + " "))
                        .append(msgEN);

                } else {
                    resultRU = bRU.build();//GM.getLogo().append(bRU.build());//b.build();
                    resultEN = bEN.build();//GM.getLogo().append(bEN.build());//b.build();
                }

                viewerResultRU = topRU.append(logo).append(resultRU);
                viewerResultEN = topEN.append(logo).append(resultEN);

                //–Ω–∞ –º–∏–Ω–∏–∏–≥—Ä–∞—Ö - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º, –∫—Ç–æ –≤ –æ–¥–Ω–æ–º –º–∏—Ä–µ –∏–ª–∏ –≤ –ª–æ–±–±–∏
                final UUID uid = pl.getWorld().getUID();
                for (final Player p : ce.viewers()) {
                    if (p.getWorld().getUID().equals(uid) || StringUtil.isLobby(p.getWorld())) {
                        p.sendMessage(p.getClientOption(ClientOption.LOCALE).equals("ru_ru")
                            ? viewerResultRU : viewerResultEN);
                    }
                }

            } else {

                resultRU = bRU.build();//GM.getLogo().append(bRU.build());//b.build();
                resultEN = bEN.build();//GM.getLogo().append(bEN.build());//b.build();

                viewerResultRU = topRU.append(logo).append(resultRU);
                viewerResultEN = topEN.append(logo).append(resultEN);

                //–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º, –∫—Ç–æ –æ—Å—Ç–∞–ª—Å—è –≤ —ç–≤–µ–Ω—Ç–µ
                for (Player p : ce.viewers()) {
                    p.sendMessage(p.getClientOption(ClientOption.LOCALE).equals("ru_ru")
                        ? viewerResultRU : viewerResultEN);
                }

            }


            //–µ—Å–ª–∏ –∏–≥—Ä–∞ –ø–æ—Å—Ç–∞–≤–∏–ª–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –∏–Ω—Ñ–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, –ª–µ–ø–∏–º —Å —ç—Ç–∏–º –∏–Ω—Ñ–æ
            if (ce.showSelf()) {//–µ—Å–ª–∏ –Ω–µ—Ç, —Ä–µ–∂–∏–º —Å–∞–º —Å–∫–∏–Ω–µ—Ç –∏–≥—Ä–æ–∫—É —á—Ç–æ –Ω–∞–¥–æ
                pl.sendMessage(pl.getClientOption(ClientOption.LOCALE).equals("ru_ru")
                    ? viewerResultRU : viewerResultEN);
            }

            //–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å
            Bukkit.getConsoleSender().sendMessage(viewerResultRU);
        }
    }

    private static Component[] format(final ChatPrepareEvent ce, final boolean eng, final boolean clr) {
        String msg = eng ? ce.strMsgEn : ce.strMsgRu;
        final HoverEvent<Component> url_ttp = eng ? URL_TOOLTIP_EN : URL_TOOLTIP_RU;
        final HoverEvent<Component> msg_ttp = eng ? MSG_TOOLTIP_EN : MSG_TOOLTIP_RU;
        final String[] split = SPLIT.split(msg, true);
        final String reply;
        if (split.length == 1) reply = null;
        else {reply = split[0]; msg = split[1];}
        if (!clr) {
            final Component cm = TCUtil.form(msg)
                .hoverEvent(msg_ttp).clickEvent(ClickEvent.callback(ClickCallback
                    .widen(new Message(msg, ce.getOplayer()), Player.class), OPTIONS));
            return reply == null ? new Component[]{cm} : new Component[]{TCUtil.form(reply), cm};
        }
        for (final Format frm : FORMATS) msg = frm.process(msg);
        msg = msg.replace('&', '¬ß').replace("\\", "");
        final TextComponent.Builder mb = Component.text();
        final StringBuilder sb = new StringBuilder();
        boolean start = true;
        for (final String s : msg.split(" ")) {
            if (!s.startsWith("http")) {
                if (start) start = false;
                else sb.append(" ");
                sb.append(s);
                continue;
            }
            if (start) start = false;
            else sb.append(" ");
            final String sbm = sb.toString();
            mb.append(TCUtil.form(sbm)
                .hoverEvent(msg_ttp).clickEvent(ClickEvent.callback(ClickCallback
                    .widen(new Message(sbm, ce.getOplayer()), Player.class), OPTIONS)));
            mb.append(Component.text(s, NamedTextColor.BLUE, TextDecoration.UNDERLINED)
                .hoverEvent(url_ttp).clickEvent(ClickEvent.openUrl(s)));
            sb.setLength(0);
        }
        if (!sb.isEmpty()) {
            final String sbm = sb.toString();
            mb.append(TCUtil.form(sbm)
                .hoverEvent(msg_ttp).clickEvent(ClickEvent.callback(ClickCallback
                    .widen(new Message(sbm, ce.getOplayer()), Player.class), OPTIONS)));
        }
        return reply == null ? new Component[]{mb.build()} : new Component[]{TCUtil.form(reply), mb.build()};
    }

    private static final int MAX_LEN = 40;
    private record Message(String msg, Oplayer sender) implements ClickCallback<Player> {
        public void accept(final Player pl) {
            final String strip = TCUtil.strip(msg);
            final Oplayer op = PM.getOplayer(pl);
            if (op == null) return;
            final String name = sender.isGuest ? sender.getDataString(Data.FAMILY) : sender.nik;
            pl.openBook(Book.book(TCUtil.form("<dark_aqua>–û–ø—Ü–∏–∏"), Component.text(name), new Component[] {
                TCUtil.form("<dark_aqua><b><shadow:#000000FF>–û–ø—Ü–∏–∏:<reset>\n\n")
                    .append(TCUtil.form((strip.length() > MAX_LEN ? strip.substring(0, MAX_LEN) + ".." : msg) + "\n")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<yellow>–ö–ª–∏–∫ <gold>- –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å")))
                        .clickEvent(ClickEvent.copyToClipboard(msg)))

                    .append(TCUtil.form("<amber>‚ïò‚Ä∫ <gold>–û—Ç–≤–µ—Ç–∏—Ç—å<reset>\n\n")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<aqua>–ö–ª–∏–∫ <dark_aqua>- –æ—Ç–≤–µ—Ç–∏—Ç—å")))
                        .clickEvent(ClickEvent.callback(ClickCallback.widen(p ->
                            PlayerInput.get(InputButton.InputType.CHAT, p, rpl -> {
                            final Component reply = TCUtil.form("<gray>‚îå‚îÄ <font:uniform>" + NIK_COLOR
                                    + name + " <reset><font:uniform><gray>‚ñ∫ " + msg + SPLIT.get() + rpl)
                                .decorationIfAbsent(TextDecoration.ITALIC, TextDecoration.State.NOT_SET);
                            Ostrov.async(() -> chat(p, reply, new HashSet<>(Bukkit.getOnlinePlayers())));
                        }, ""), Player.class))))

                    .append(TCUtil.form("<dark_green><b><shadow:#000000FF>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:<reset>\n"))
                    .append(TCUtil.form(TCUtil.sided("<u>" + NIK_COLOR + name + "</u>") + "\n\n")
//                        .hoverEvent(HoverEvent.showText(TCUtil.form("<gold>–ö–ª–∏–∫ <amber>- –Ω–∞–ø–∏—Å–∞—Ç—å –õ–°")))
                        .clickEvent(ClickEvent.suggestCommand("/msg " + name + " ")))

                    .append(TCUtil.form("<dark_gray>‚Ä∫ –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å<reset>\n\n")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<pink>–ö–ª–∏–∫ <dark_purple>- –¥–æ–±–∞–≤–∏—Ç—å –≤ –ß–°")))
                        .clickEvent(ClickEvent.runCommand("/ignore " + sender.nik)))

                    .append(op.isStaff ? TCUtil.form("<stale><cardinal>‚Ä∫ –ó–∞–º—É—Ç–∏—Ç—å<reset>")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<red>–ö–ª–∏–∫ <dark_red>- –≤—ã–¥–∞—Ç—å –º—É—Ç")))
                        .clickEvent(ClickEvent.suggestCommand("/mute " + sender.nik + " 10m "))

                    : TCUtil.form("<stale><cardinal>‚Ä∫ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è<reset>")
                        .hoverEvent(HoverEvent.showText(TCUtil.form("<red>–ö–ª–∏–∫ <dark_red>- –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É")))
                        .clickEvent(ClickEvent.callback(ClickCallback.widen(p -> PlayerInput.get(InputButton.InputType.ANVILL, p, rpl -> {
                            //TODO –∂–∞–ª–æ–±—ã –Ω–∞ —á–∞—Ç
                        }, "–ñ–∞–ª–æ–±–∞"), Player.class))))
            }));
        }
    }

    public static String getStatus(final Oplayer op) {
        if (op == null) return "¬ßc–ò–≥—Ä–æ–∫ –û—Ñ—Ñ–ª–∞–π–Ω";
        final int m = op.getDataInt(Data.LONI);
        if (m < 10) return "¬ß6–ù–∏—â–µ–±—Ä–æ–¥";
        if (m < 100) return "¬ß6–ë–µ–¥–Ω—è–∫";
        if (m < 1000) return "¬ß6–ú–∞–ª–æ–∏–º—É—â–∏–π";
        if (m < 10000) return "¬ß6–í –¥–æ—Å—Ç–∞—Ç–∫–µ";
        if (m < 100000) return "¬ß6–•–æ–∑—è–∏–Ω –∂–∏–∑–Ω–∏";
        if (m < 1000000) return "¬ß6–ë–æ–≥–∞—á";
        return "¬ß6–û–ª–∏–≥–∞—Ä—Ö";
    }

    //—Å –ø—Ä–æ–∫—Å–∏ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—à–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –Ω–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
    //–ø—Ä–∏—Ö–æ–¥—è—Ç 2 –≤–æ–ª–Ω—ã - –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π–∫–æ–º
    @Deprecated
    public static void onProxyChat(final Chanell ch, final int proxyId, final String serverName, final String senderName, final String gsonMsg) {
        onProxyChat(ch, senderName, gsonMsg);
    }

    public static void onProxyChat(final Chanell ch, final String senderName, final String gsonMsg) {
        final Component c = GsonComponentSerializer.gson().deserialize(gsonMsg);
        for (Player p : Bukkit.getOnlinePlayers()) {
            final Oplayer to = PM.getOplayer(p);
            if (to != null) {
                if (to.isBlackListed(senderName)
                    || to.isLocalChat()) continue;
                //—Ä—É—Å—Å–∫–∏–º —Ä—É—Å—Å–∫–∏–π —á–∞—Ç
                if (to.eng && ch == Chanell.CHAT_EN) p.sendMessage(c);
                else //–æ—Å—Ç–∞–ª—å–Ω—ã–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫—É—é –≤–µ—Ä—Å–∏—é
                    if (!to.eng && ch == Chanell.CHAT_RU) p.sendMessage(c);
            }
        }
    }
}
